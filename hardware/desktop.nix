# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usbhid" "uas" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd" "amdgpu"];
  boot.extraModulePackages = [];

  boot.initrd.luks.devices."ROOT".device = "/dev/disk/by-uuid/107d2cbb-b496-4a0c-b961-07e66f331d73";
  fileSystems."/" = {
    device = "/dev/mapper/ROOT";
    fsType = "btrfs";
    options = [
      "defaults"
      "noatime"
      "nodiratime"
      "compress=zstd:3"
      "ssd"
      "space_cache=v2"
      "subvol=@"
    ];
  };

  fileSystems."/home" = {
    device = "/dev/mapper/ROOT";
    fsType = "btrfs";
    options = [
      "defaults"
      "noatime"
      "nodiratime"
      "compress=zstd:3"
      "ssd"
      "space_cache=v2"
      "subvol=@home"
    ];
  };

  fileSystems."/nix" = {
    device = "/dev/mapper/ROOT";
    fsType = "btrfs";
    options = [
      "defaults"
      "noatime"
      "nodiratime"
      "compress=zstd:3"
      "ssd"
      "space_cache=v2"
      "subvol=@nix"
    ];
  };

  fileSystems."/btrfs" = {
    device = "/dev/mapper/ROOT";
    fsType = "btrfs";
    options = [
      "defaults"
      "noatime"
      "nodiratime"
      "compress=zstd:3"
      "ssd"
      "space_cache=v2"
      "subvol=/"
    ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/76CB-A1E8";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  swapDevices = [];

  hardware.bluetooth.enable = lib.mkDefault true;
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
